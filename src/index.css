@tailwind base;
@tailwind components;
@tailwind utilities;

/* Definition of the design system. All colors, gradients, fonts, etc should be defined here. 
All colors MUST be HSL.
*/

@layer base {
  :root {
    /* HAP Modern Color System - Dark theme with glassmorphism */
    --background: 240 10% 8%;
    --foreground: 0 0% 98%;

    --card: 240 10% 12%;
    --card-foreground: 0 0% 98%;

    --popover: 240 10% 12%;
    --popover-foreground: 0 0% 98%;

    /* Gaming-inspired primary gradient purple to blue */
    --primary: 262 83% 58%;
    --primary-foreground: 0 0% 98%;
    --primary-glow: 258 90% 66%;

    /* Secondary pink to purple */
    --secondary: 335 78% 42%;
    --secondary-foreground: 0 0% 98%;
    --secondary-glow: 330 81% 60%;

    /* Muted with glass effect */
    --muted: 240 10% 15%;
    --muted-foreground: 240 5% 65%;

    /* Accent neon highlights */
    --accent: 158 64% 52%;
    --accent-foreground: 240 10% 8%;
    --accent-glow: 158 100% 50%;

    --destructive: 0 84% 60%;
    --destructive-foreground: 0 0% 98%;

    /* Glass borders and effects */
    --border: 240 10% 20%;
    --input: 240 10% 16%;
    --ring: 262 83% 58%;

    /* Gaming UI elements */
    --success: 142 76% 36%;
    --warning: 38 92% 50%;
    --info: 221 83% 53%;

    /* Gradients for glassmorphism */
    --gradient-primary: linear-gradient(135deg, hsl(262 83% 58% / 0.8), hsl(258 90% 66% / 0.6));
    --gradient-secondary: linear-gradient(135deg, hsl(335 78% 42% / 0.8), hsl(330 81% 60% / 0.6));
    --gradient-accent: linear-gradient(135deg, hsl(158 64% 52% / 0.8), hsl(158 100% 50% / 0.6));
    --gradient-glass: linear-gradient(135deg, hsl(240 10% 15% / 0.7), hsl(240 10% 20% / 0.3));
    --gradient-hero: linear-gradient(135deg, hsl(262 83% 58% / 0.1), hsl(335 78% 42% / 0.1), hsl(158 64% 52% / 0.1));

    /* Glass effects */
    --glass-bg: hsla(240, 10%, 15%, 0.8);
    --glass-border: hsla(240, 10%, 30%, 0.2);
    --glass-shadow: 0 8px 32px hsla(262, 83%, 58%, 0.15);

    /* Animation speeds */
    --transition-fast: 0.15s ease-out;
    --transition-normal: 0.25s ease-out;
    --transition-slow: 0.4s ease-out;

    --radius: 1rem;

    --sidebar-background: 0 0% 98%;

    --sidebar-foreground: 240 5.3% 26.1%;

    --sidebar-primary: 240 5.9% 10%;

    --sidebar-primary-foreground: 0 0% 98%;

    --sidebar-accent: 240 4.8% 95.9%;

    --sidebar-accent-foreground: 240 5.9% 10%;

    --sidebar-border: 220 13% 91%;

    --sidebar-ring: 217.2 91.2% 59.8%;
  }

}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground overflow-x-hidden;
    background: radial-gradient(ellipse at top, hsl(262 83% 58% / 0.05), transparent 50%),
                radial-gradient(ellipse at bottom right, hsl(335 78% 42% / 0.05), transparent 50%),
                hsl(var(--background));
  }
}

@layer components {
  /* Glassmorphism utilities */
  .glass {
    background: var(--glass-bg);
    border: 1px solid var(--glass-border);
    backdrop-filter: blur(16px);
    -webkit-backdrop-filter: blur(16px);
    box-shadow: var(--glass-shadow);
  }

  .glass-card {
    @apply glass rounded-2xl p-6 transition-all duration-300;
  }

  .glass-card:hover {
    box-shadow: 0 12px 40px hsla(262, 83%, 58%, 0.2);
    transform: translateY(-2px);
  }

  /* Gaming UI elements */
  .gaming-border {
    border: 2px solid;
    border-image: var(--gradient-primary) 1;
  }

  .neon-glow {
    box-shadow: 0 0 20px hsl(var(--primary) / 0.5);
    filter: drop-shadow(0 0 10px hsl(var(--primary) / 0.3));
  }

  /* Animations */
  .animate-float {
    animation: float 3s ease-in-out infinite;
  }

  @keyframes float {
    0%, 100% { transform: translateY(0px); }
    50% { transform: translateY(-10px); }
  }

  .animate-glow {
    animation: glow 2s ease-in-out infinite alternate;
  }

  @keyframes glow {
    from { box-shadow: 0 0 20px hsl(var(--primary) / 0.3); }
    to { box-shadow: 0 0 30px hsl(var(--primary) / 0.7); }
  }

  /* Progress bars for gamification */
  .progress-bar {
    background: var(--gradient-glass);
    border-radius: 9999px;
    overflow: hidden;
    position: relative;
  }

  .progress-fill {
    background: var(--gradient-primary);
    height: 100%;
    border-radius: inherit;
    transition: width 0.5s ease-out;
  }

  /* Hover effects */
  .hover-lift {
    transition: transform var(--transition-normal), box-shadow var(--transition-normal);
  }

  .hover-lift:hover {
    transform: translateY(-4px);
    box-shadow: 0 10px 25px hsl(var(--primary) / 0.15);
  }
}
